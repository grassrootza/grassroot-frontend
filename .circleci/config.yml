version: 2
jobs:
  build:
    docker:
      - image: circleci/node:9.4
    steps:
      - checkout
      - run:
          name: Get Webpack
          command: |
            sudo npm i -g webpack
            sudo npm i -g webpack-dev-server
      - restore_cache:
          keys: 
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install local dependencies
          command: npm install
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules  
      - run: 
          name: Build server and browser
          command: npm run build:uni
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist
            - dist-server
  build_docker:
      docker:
        - image: circleci/node:9.4 
      steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          - v1-dist-
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            export VERSION=${CIRCLE_BRANCH}-${CIRCLE_SHA1}
            docker build -f Dockerfile -t grassroot-frontend:${VERSION} .
      - run:
          name: Install AWS CLI and log in
          command: |
            sudo apt-get update && sudo apt-get install python && sudo apt-get install python-pip && sudo apt-get install python-dev
            pip install awscli --upgrade --user
            export PATH=~/.local/bin:$PATH
            eval $(aws ecr get-login --no-include-email --region eu-west-1)
      - run:
          name: Tag and upload image to ECR          
          command: |
            export VERSION=${CIRCLE_BRANCH}-${CIRCLE_SHA1}
            docker tag grassroot-frontend:${VERSION} ${ECR_URL}/grassroot-frontend:${VERSION}
            docker push ${ECR_URL}/grassroot-frontend:${VERSION}
  deploy_beanstalk:
      docker:
        - image: circleci/node:9.4
      steps:
      - checkout
      - run:
          name: Install AWS CLI and log in
          command: |
            sudo apt-get update && sudo apt-get install python && sudo apt-get install python-pip && sudo apt-get install python-dev
            pip install awscli --upgrade --user
            export PATH=~/.local/bin:$PATH
      - run:
          name: Modify Beanstalk file
          command: |
            export VERSION=${CIRCLE_BRANCH}-${CIRCLE_SHA1}
            cp Dockerrun.aws.json.template Dockerrun.aws.json
            sed -i "s/__version__/${VERSION}/g" Dockerrun.aws.json
            sed -i "s/__repo__/${ECR_URL}/g" Dockerrun.aws.json
            zip -r ${VERSION}.zip Dockerrun.aws.json
            zip -r ${VERSION}.zip .ebextensions/
      - run:
          name: Deploy to Beanstalk
          command: |
            export PATH=~/.local/bin:$PATH
            export VERSION=${CIRCLE_BRANCH}-${CIRCLE_SHA1}
            aws s3 cp ${VERSION}.zip s3://$EB_BUCKET/$EB_FOLDER/${VERSION}.zip --region eu-west-1
            aws elasticbeanstalk create-application-version --application-name gr-frontend --version-label ${VERSION} --source-bundle S3Bucket=$EB_BUCKET,S3Key=$EB_FOLDER/${VERSION}.zip --region eu-west-1
            aws elasticbeanstalk update-environment --environment-name gr-frontend-staging --version-label ${VERSION} --region eu-west-1

workflows:
  version: 2
  build_and_deploy:
    jobs:
    - build
    - build_docker:
        requires:
          - build
    - deploy_beanstalk:
        requires:
          - build_docker